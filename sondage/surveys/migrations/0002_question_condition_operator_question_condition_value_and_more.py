# Generated by Django 5.2.1 on 2025-05-23 22:11

import colorfield.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('surveys', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='question',
            name='condition_operator',
            field=models.CharField(blank=True, choices=[('eq', 'Est égal à'), ('neq', 'Est différent de'), ('gt', 'Est supérieur à'), ('lt', 'Est inférieur à'), ('contains', 'Contient'), ('not_contains', 'Ne contient pas')], default='eq', max_length=15, verbose_name='Opérateur de condition'),
        ),
        migrations.AddField(
            model_name='question',
            name='condition_value',
            field=models.CharField(blank=True, max_length=255, verbose_name='Valeur de la condition'),
        ),
        migrations.AddField(
            model_name='question',
            name='depends_on',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dependent_questions', to='surveys.question', verbose_name='Dépend de la question'),
        ),
        migrations.AddField(
            model_name='question',
            name='description',
            field=models.TextField(blank=True, verbose_name='Description ou aide'),
        ),
        migrations.AddField(
            model_name='question',
            name='scale_max',
            field=models.IntegerField(default=5, verbose_name="Valeur maximale de l'échelle"),
        ),
        migrations.AddField(
            model_name='question',
            name='scale_max_label',
            field=models.CharField(blank=True, max_length=50, verbose_name='Étiquette pour la valeur maximale'),
        ),
        migrations.AddField(
            model_name='question',
            name='scale_min',
            field=models.IntegerField(default=1, verbose_name="Valeur minimale de l'échelle"),
        ),
        migrations.AddField(
            model_name='question',
            name='scale_min_label',
            field=models.CharField(blank=True, max_length=50, verbose_name='Étiquette pour la valeur minimale'),
        ),
        migrations.AddField(
            model_name='questionoption',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='option_images/', verbose_name='Image'),
        ),
        migrations.AddField(
            model_name='questionoption',
            name='is_default',
            field=models.BooleanField(default=False, verbose_name='Option par défaut'),
        ),
        migrations.AddField(
            model_name='questionoption',
            name='numeric_value',
            field=models.IntegerField(blank=True, null=True, verbose_name='Valeur numérique'),
        ),
        migrations.AddField(
            model_name='survey',
            name='access_token',
            field=models.CharField(blank=True, max_length=64, null=True, verbose_name="Token d'accès"),
        ),
        migrations.AddField(
            model_name='survey',
            name='allow_multiple_submissions',
            field=models.BooleanField(default=True, verbose_name='Autorise plusieurs participations'),
        ),
        migrations.AddField(
            model_name='survey',
            name='background_color',
            field=colorfield.fields.ColorField(default='#ffffff', image_field=None, max_length=25, samples=None, verbose_name="Couleur d'arrière-plan"),
        ),
        migrations.AddField(
            model_name='survey',
            name='completion_message',
            field=models.TextField(blank=True, default="Merci d'avoir répondu à ce sondage !", verbose_name='Message de fin'),
        ),
        migrations.AddField(
            model_name='survey',
            name='end_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Date de fin'),
        ),
        migrations.AddField(
            model_name='survey',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to='survey_logos/', verbose_name='Logo'),
        ),
        migrations.AddField(
            model_name='survey',
            name='password',
            field=models.CharField(blank=True, max_length=128, null=True, verbose_name='Mot de passe'),
        ),
        migrations.AddField(
            model_name='survey',
            name='primary_color',
            field=colorfield.fields.ColorField(default='#007bff', image_field=None, max_length=25, samples=None, verbose_name='Couleur principale'),
        ),
        migrations.AddField(
            model_name='survey',
            name='start_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Date de début'),
        ),
        migrations.AddField(
            model_name='survey',
            name='track_ip',
            field=models.BooleanField(default=True, verbose_name='Enregistrer les adresses IP'),
        ),
        migrations.AlterField(
            model_name='question',
            name='question_type',
            field=models.CharField(choices=[('single', 'Choix unique'), ('multiple', 'Choix multiple'), ('text', 'Texte libre'), ('scale', 'Échelle'), ('date', 'Date'), ('email', 'Email'), ('number', 'Nombre')], default='single', max_length=20, verbose_name='Type de question'),
        ),
        migrations.CreateModel(
            name='SurveyPageBreak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Titre de la page')),
                ('description', models.TextField(blank=True, verbose_name='Description de la page')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_breaks', to='surveys.survey')),
            ],
            options={
                'verbose_name': 'Saut de page',
                'verbose_name_plural': 'Sauts de page',
                'ordering': ['survey', 'order'],
            },
        ),
        migrations.CreateModel(
            name='SurveyTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du thème')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('primary_color', colorfield.fields.ColorField(default='#007bff', image_field=None, max_length=25, samples=None, verbose_name='Couleur principale')),
                ('background_color', colorfield.fields.ColorField(default='#ffffff', image_field=None, max_length=25, samples=None, verbose_name="Couleur d'arrière-plan")),
                ('button_color', colorfield.fields.ColorField(default='#007bff', image_field=None, max_length=25, samples=None, verbose_name='Couleur des boutons')),
                ('text_color', colorfield.fields.ColorField(default='#212529', image_field=None, max_length=25, samples=None, verbose_name='Couleur du texte')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='theme_logos/', verbose_name='Logo')),
                ('css', models.TextField(blank=True, verbose_name='CSS personnalisé')),
                ('is_public', models.BooleanField(default=False, verbose_name='Thème public')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='themes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Thème de sondage',
                'verbose_name_plural': 'Thèmes de sondage',
                'ordering': ['-created_at'],
            },
        ),
    ]
